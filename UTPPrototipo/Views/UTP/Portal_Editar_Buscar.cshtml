@model  UTPPrototipo.Models.ViewModels.Contenido.ContenidoVista



@*@model UTP.PortalEmpleabilidad.Modelo.Contenido*@ 

@{
    Layout = "~/Views/UTP/_LayoutUTP.cshtml";
    ViewBag.Title = "Mantenimiento de Portal";
}
<div class="container" style="margin-top:2px;">
    @using (Html.BeginForm("Portal_Editar_Buscar", "UTP", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Contenido</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.id)

            <div class="form-group" style="display:none">
                @Html.LabelFor(model => model.IdContenido, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.TextBoxFor(model => model.IdContenido, new { disabled = "disabled" })*@
                    @Html.EditorFor(model => model.IdContenido)
                    
                    @Html.ValidationMessageFor(model => model.IdContenido)
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Código", new { @class = "control-label col-md-2" })
                @*@Html.LabelFor(model => model.IdContenido , htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    <fieldset>

                        <input class="form-control disabled" value="@Model.IdContenido" disabled style="width: 80px;" />
                    </fieldset>


                </div>
            </div>

               
                <div class="form-group">
                    @Html.Label("Título", new { @class = "control-label col-md-2" })
                    @*@Html.LabelFor(model => model.Titulo, new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Titulo)*@

                        @Html.TextAreaFor(model => model.Titulo, new { @class = "form-control",  style = "width: 500px;height:50px" })

                        @Html.ValidationMessageFor(model => model.Titulo)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Sub Título", new { @class = "control-label col-md-2" })
                    @*@Html.LabelFor(model => model.SubTitulo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.SubTitulo)*@
                        @Html.TextAreaFor(model => model.SubTitulo, new { @class = "form-control", style = "width: 500px;height:50px" })
                        @Html.ValidationMessageFor(model => model.SubTitulo)
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Descripción", new { @class = "control-label col-md-2" })
                    @*@Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Descripcion)*@
                        @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", style = "width: 500px;height:100px" })

                        @Html.ValidationMessageFor(model => model.Descripcion)
                    </div>
                </div>
                

            <div class="form-group">
                @Html.Label("Menú", new { @class = "control-label col-md-2" })
                @*@Html.LabelFor(model => model.Menu, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Menu)*@

                    @Html.DropDownList("Menu", ViewData["ContenidoMenu"] as List<SelectListItem>, "Seleccione...", new { @class = "form-control", style = "width: 200px;height:20px" })
                    @Html.ValidationMessageFor(model => model.Menu)
                </div>
            </div>





                <div class="form-group">
                    @Html.Label("Imagen", new { @class = "control-label col-md-2" })
                    @*@Html.LabelFor(model => model.ImagenHtml, htmlAttributes: new { @class = "control-label col-md-2" })*@


                    @if (Model.ArchivoNombreOriginal == "" || Model.ArchivoNombreOriginal == null)
                {
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.ImagenHtml, new { type = "file"})
                            @*@Html.EditorFor(model => model.Imagen)*@
                            @Html.ValidationMessageFor(model => model.ImagenHtml)
                        </div>

                }
                else
                {
                        <div class="col-md-10">
                            <fieldset>

                                <input class="form-control disabled" value="@Model.ArchivoNombreOriginal" disabled style="width: 500px;" />
                            </fieldset>

                            @Html.ActionLink("Remover", "RemoverArchivo", new { id = Model.IdContenido})
                        </div>

                }

                </div>



                <div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.CreadoPor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CreadoPor)
                        @Html.ValidationMessageFor(model => model.CreadoPor)
                    </div>
                </div>

                <div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.FechaCreacion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FechaCreacion)
                        @Html.ValidationMessageFor(model => model.FechaCreacion)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Activo)
                        @Html.ValidationMessageFor(model => model.Activo)
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("En pantalla principal", new { @class = "control-label col-md-2" })
                    @*@Html.LabelFor(model => model.EnPantallaPrincipal, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EnPantallaPrincipal)
                        @Html.ValidationMessageFor(model => model.EnPantallaPrincipal)
                    </div>
                </div>
               @if (Model.Menu == "6")
               {
                  <div class="form-group">
                @Html.Label("Mostrar", new { @class = "control-label col-md-2" })
                @*@Html.LabelFor(model => model.Menu, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Menu)*@

                    @Html.DropDownList("Pestana", ViewData["ContenidoPestana"] as List<SelectListItem>, "Seleccione...", new { @class = "form-control", style = "width: 200px;height:20px" })
                    @Html.ValidationMessageFor(model => model.Pestana)
                </div>
            </div> 
               }  
            
                       

                <div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.FechaModificacion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FechaModificacion)
                        @Html.ValidationMessageFor(model => model.FechaModificacion)
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Actualizar" class="btn btn-default" />
                    </div>
                </div>       
            </div>
    }

    <div>
        @Html.ActionLink("<- Atrás", "Portal")
    </div>
</div>
    <script>

        $(document).ready(function () {
            $("#divFinalCabecera").removeClass("color-paleta1 color-paleta2 color-paleta3 color-paleta4 color-paleta5 color-paleta6 color-paleta8 color-paleta9").addClass("color-paleta7")
            $('#PestañaPortal').css('backgroundColor', '#f00');
        });


    </script>

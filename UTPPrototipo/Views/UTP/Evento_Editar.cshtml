@model UTP.PortalEmpleabilidad.Modelo.Evento
@using UTP.PortalEmpleabilidad.Modelo

@{
    Layout = "~/Views/UTP/_LayoutUTP.cshtml";
    ViewBag.Title = "Evento";
}

<link href="~/Content/font-awesome.css" rel="stylesheet" />
<div class="container fuente-pequeña" style="margin-top:2px;">
    <div class="panel-group" id="datos-cuenta" role="tablist" aria-multiselectable="true">
        @{Html.RenderAction("VistaCabeceraUtp", "UTP");}
    </div>
    <h5>Evento: @Model.NombreEvento</h5>
    <br />
    <script src="~/Scripts/jquery-ui-1.11.2.js"></script>
    <script src="~/Scripts/jquery.maskedinput.js"></script>
    <script src="~/Scripts/calendario.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <div class="row">
        <div class="col-sm-6" style="border-right:solid;border-color:rgb(220, 220, 220);border-width:1px;">
            @*@using (Html.BeginForm("Evento", "UTP", FormMethod.Post, new { enctype = "multipart/form-data" }))*@
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.IdEvento)
                <!--Se pasan en hidden los valores de Departamento, Provincia y Distrito.-->
                @Html.HiddenFor(model => Model.TextoDepartamento)
                @Html.HiddenFor(model => Model.TextoCiudad)
                @Html.HiddenFor(model => Model.TextDistrito)
                @Html.Hidden("IdDireccionCiudad", Model.DireccionCiudad)
                @Html.Hidden("IdDireccionDistrito", Model.DireccionDistrito)

                <span style="font-size:9px;">* Campos obligatorios</span>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="input-group">


                            <span class="input-group-addon">(*)Nombre<br />Evento</span>
                            @*<input type="text" class="form-control" placeholder="Nombre del Evento">*@

                            @Html.TextBoxFor(model => model.NombreEvento, new { @class = "form-control", rows = "3", @placeholder = "Nombre del Evento" })
                        </div>@Html.ValidationMessageFor(model => model.NombreEvento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">

                    <div class="col-sm-6">
                        <div class="input-group">

                            <span class="input-group-addon">(*)Estado</span>

                            @Html.DropDownList("EstadoEvento", ViewData["ListaEstadoEvento"] as List<SelectListItem>, "- Seleccione Estado -", new { @class = "form-control" })
                        </div>@Html.ValidationMessageFor(model => model.EstadoEvento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">

                    <div class="col-sm-6">
                        <div class="input-group">

                            <span class="input-group-addon">(*)Tipo</span>

                            @Html.DropDownList("TipoEvento", ViewData["ListaTipoEvento"] as List<SelectListItem>, "- Seleccione Tipo Evento -", new { @class = "form-control" })
                        </div>@Html.ValidationMessageFor(model => model.TipoEvento, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">Empresa<br />auspiciad.</span>
                            @Html.DropDownList("IdEmpresa", ViewData["ListaEmpresa"] as List<SelectListItem>, "- Seleccione Empresa -", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="input-group">
                            <span class="input-group-addon">Descrip-<br />ción</span>
                            @*<textarea rows="6" class="form-control" placeholder="Empresa auspiciadora"></textarea>*@

                            @Html.TextAreaFor(model => model.DescripcionEvento, new { @class = "form-control", rows = "3", @placeholder = "Empresa auspiciadora" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">Fecha <br />Inicio</span>
                            @*<input type="text" class="form-control" placeholder="Fecha de Inicio (dd/mm/aaaa)">*@
                            @Html.TextBoxFor(model => model.FechaEvento, new { @class = "form-control", @placeholder = "Fecha de Inicio (dd/mm/aaaa)",@id="FechaEvento" })
                            @*@Html.TextBoxFor(model => model.FechaEvento, new { @class = "form-control", @placeholder = "Fecha de Inicio (dd/mm/aaaa)", @Value = System.DateTime.Now.ToString("d") })*@
                            
                        </div>

                            @*@Html.TextBoxFor(model => model.FechaEvento, new { @class = "form-control", rows = "3", @placeholder = "Fecha de Inicio (dd/mm/aaaa)",@id="FechaEvento" })*@
                        @Html.ValidationMessageFor(model => model.FechaEvento, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="input-group">

                            <span class="input-group-addon">(*)Describa<br />Fecha</span>

                            @*<input type="text" class="form-control" placeholder="Fecha del Evento. Ej: Lunes 27 de Enero del 2014, de 8 a 9 de la Noche">*@
                            @Html.TextBoxFor(model => model.FechaEventoTexto, new { @class = "form-control", rows = "3", @placeholder = "Fecha del Evento. Ej: Lunes 27 de Enero del 2014, de 8 a 9 de la Noche" })
                        </div>@Html.ValidationMessageFor(model => model.FechaEventoTexto, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="input-group">

                            <span class="input-group-addon">(*)Lugar</span>

                            @* <input type="text" class="form-control" placeholder="Describa el Lugar del Evento. Ej: Centro de Convenciones CLARO">*@
                            @Html.TextBoxFor(model => model.LugarEvento, new { @class = "form-control", rows = "3", @placeholder = "Describa el Lugar del Evento. Ej: Centro de Convenciones CLARO" })
                        </div>@Html.ValidationMessageFor(model => model.LugarEvento, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">* Departa-<br />mento</span>
                            @*<input type="text" class="form-control" placeholder="Departamento del Evento">*@
                            @*@Html.TextBoxFor(model => model.DireccionRegion, new { @class = "form-control", rows = "3", @placeholder = "Departamento del Evento" })*@
                            @*@Html.DropDownList("DireccionRegion", ViewData["Departamento"] as List<SelectListItem>, "-Seleccione-", new { @class = "form-control", @id = "DireccionDepartamentoLocacion" })*@
                            @Html.DropDownListFor(m => m.DireccionRegion, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">* Ciudad</span>
                            @*<input type="text" class="form-control" placeholder="Ciudad del Evento">*@
                            @*@Html.DropDownList("DireccionCiudad", new SelectList(string.Empty, "Value", "Text"), "-Seleccione-", new { @class = "form-control", @id = "DireccionCiudadLocacion" })*@
                            @*<select class="form-control" id="DireccionCiudad" name="DireccionCiudad" data-val="true" data-val_required="Falta la provincia" aria-required="true" aria-invalid="false" aria-describedby="DireccionCiudad-error"></select>*@
                            @Html.DropDownListFor(m => m.DireccionCiudad, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                            @*@Html.TextBoxFor(model => model.DireccionCiudad, new { @class = "form-control", rows = "3", @placeholder = "Ciudad del Evento" })*@
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">Distrito</span>
                            @*<input type="text" class="form-control" placeholder="Distrito del Evento">*@
                            @*@Html.TextBoxFor(model => model.DireccionDistrito, new { @class = "form-control", rows = "3", @placeholder = "Distrito del Evento" })*@
                            @*@Html.DropDownList("DireccionDistrito", new SelectList(string.Empty, "Value", "Text"), "-Seleccione-", new { @class = "form-control", @id = "DireccionDistritoLocacion" })*@
                            @*<select class="form-control" id="DireccionDistrito" name="DireccionDistrito" data-val="true" data-val_required="Falta el distrito"></select>*@
                            @Html.DropDownListFor(m => m.DireccionDistrito, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="input-group">
                            <span class="input-group-addon">Dirección</span>
                            @*<input type="text" class="form-control" placeholder="Dirección del Evento. Ej: Calle Amapolas 991">*@
                            @Html.TextBoxFor(model => model.DireccionEvento, new { @class = "form-control", rows = "3", @placeholder = "Dirección del Evento. Ej: Calle Amapolas 991" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        <div class="input-group">
                            <span class="input-group-addon">Asistentes<br />esperados</span>
                            @*<input type="text" class="form-control" placeholder="Número">*@
                            @Html.TextBoxFor(model => model.AsistentesEsperados, new { @class = "form-control", rows = "3", @placeholder = "Número" })
                        </div>
                    </div>
                </div>
                @*<div class="row">
                        <div class="col-sm-6">
                            <div class="input-group">
                                <span class="input-group-addon"><input type="checkbox"></span>
                                <input type="text" class="form-control" placeholder="Pueden asistir Alumnos">
                            </div>
                        </div>
                    </div>*@


                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">@Html.EditorFor(model => model.RegistraAlumnos)</span>
                            <span class="form-control">Pueden asistir Alumnos</span>
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">@Html.EditorFor(model => model.RegistraUsuariosEmpresa)</span>
                            <span class="form-control">Pueden asistir Usuarios empresa</span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">@Html.EditorFor(model => model.RegistraPublicoEnGeneral)</span>
                            <span class="form-control">Puede asistir el público en general</span>
                        </div>
                    </div>
                </div>




                <br />
                if (ViewBag.Rol != "ROLUTP")
                {
                    <div class="row">
                        @*<div class="col-sm-12" style="text-align:right;">
                            <button class="btn btn-default color-paleta5">Guardar</button>
                        </div>*@
                        <div class="col-sm-12" style="text-align:right;">
                            <button class="btn btn-default color-paleta5" type="submit" value="Guardar">Guardar</button>
                    </div>
                    </div>
                }
                

                @*<div class="col-sm-12" style="text-align:right;">
                        <button class="btn btn-default color-paleta7" type="submit" value="Guardar">Guardar</button>
                    </div>*@

                <hr />
                                        <table>
        <tr>
            <td class="celda-nombre">
                Creado Por
            </td>
            <td class="celda-datos">
                @*MarioAlberti*@
     @Html.DisplayFor(m => m.CreadoPor)
            </td>
        </tr>
        <tr>
            <td class="celda-nombre">
                Creado el
            </td>
            <td class="celda-datos">
                 @Html.DisplayFor(m => m.FechaCreacion)
            </td>
        </tr>
        <tr>
            <td class="celda-nombre">
                Modificado Por
            </td>
            <td class="celda-datos">
                @Html.DisplayFor(m => m.ModificadoPor)
            </td>
        </tr>
        <tr>
            <td class="celda-nombre">
                Modificado el
            </td>
            <td class="celda-datos">
                @Html.DisplayFor(m => m.FechaModificacion)
            </td>
        </tr>
    </table>
                <br />
  
            }
        </div>


    <div class="col-sm-6 ">
            <div class="row">

                @*<div id="divAdministrarImagen" class="col-sm-4">
                        @Html.Action("_AdministrarImagen", "Empresa", new { IdEmpresa = @ViewBag.IdEmpresa })
                    </div>*@

                @Html.Action("_AdministrarActualizarImagenEventoUTP", "UTP", new { IdEvento = Model.IdEvento })

                @Html.Action("_AdministrarActualizarImagenTickect", "UTP", new { IdEvento = Model.IdEvento })
            
                @Html.ActionLink("Ver Inscritos", "EventoInscritos", new { Id = Model.IdEvento })     

                @*@Html.ActionLink("Ver Inscritos", "EventoInscritos") |*@
               

            </div>
        </div>
    </div>
    <script>

    $(document).ready(function () {
        $("#divFinalCabecera").removeClass("color-paleta1 color-paleta2 color-paleta3 color-paleta4 color-paleta6 color-paleta7 color-paleta8").addClass("color-paleta5");
        $('#PestañaEventos').css('backgroundColor', '#f00');
    });
    //checkSupportForInputTypeDate();
    //$("#FechaEvento").datepicker({ dateFormat: 'dd/mm/yy' });
    $(function () {
        $("#FechaEvento").datepicker();
        //$(".ui-state-default").live("mouseenter", function () {
        //    $("h1").text($(this).text());
        //});
    });
    </script>
    <div class="row">
        <div class="col-sm-6">
            @Html.Action("_Mensajes", "Mensaje", new { pantalla = Constantes.MENSAJES_UTP_EVENTO, idEvento = @Model.IdEvento })
        </div>        
    </div>
</div>




@*<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/jquery.maskedinput.js"></script>


<script>
    $("#FechaEvento").datepicker({ dateFormat: "dd/mm/yy" }).mask("99/99/9999");
    $.validator.addMethod('date',
    function (value, element, params) {
        if (this.optional(element)) {
            return true;
        }
        var ok = true;
        try {
            $.datepicker.parseDate('dd/mm/yy', value);
        }
        catch (err) {
            ok = false;
        }
        return ok;
    });
</script>*@


<script>
    $(document).ready(function () {

        InitialCombos($("#DireccionRegion").val());
    });

    $("#DireccionRegion").change(function () {
        fillCombo("DireccionCiudad", $("#DireccionRegion").val());
    });

    $("#DireccionCiudad").change(function () {
        fillCombo("DireccionDistrito", $("#DireccionCiudad").val());
    });

    function fillCombo(updateId, value) {
        if (value != "" && value != null) {
            $.getJSON('@Url.Action("ListarListaValor", "Alumno")'
                + '/' + value,
                function (data) {
                    $("#" + updateId).empty();
                    $("#" + updateId).append("<option value selected='true'>--Seleccionar--</option>");
                    $.each(data, function (i, item) {
                        $("#" + updateId).append("<option value='"
                           + item.IdListaValor + "'>" + item.Valor
                           + "</option>");
                        $("#" + updateId).attr('disabled', false);
                    });
                });
        } else {
            $("#" + updateId).empty();
            $("#" + updateId).trigger("change");
            $("#" + updateId).attr('disabled', true);
        }
    }
    function InitialCombos(value) {
        var ListaValorPro = "";
        if (value != "" && value != null) {
            //Cargar combo de provincias
            $.getJSON('@Url.Action("ListarListaValor", "Alumno")'
                + '/' + value,
                function (data) {
                    $("#DireccionCiudad").empty();
                    $("#DireccionCiudad").append("<option value selected='true'>--Seleccionar--</option>");
                    $.each(data, function (i, item) {
                        if (item.IdListaValor == $("#IdDireccionCiudad").val()) {
                            $("#DireccionCiudad").append("<option selected value='"
                                 + item.IdListaValor + "'>" + item.Valor
                                 + "</option>");
                        } else {
                            $("#DireccionCiudad").append("<option value='"
                               + item.IdListaValor + "'>" + item.Valor
                               + "</option>");
                        }
                        $("#DireccionCiudad").attr('disabled', false);
                    });
                });
            value = $("#IdDireccionCiudad").val()
            if (value != "" && value != null) {
                //Cargar combo de distrito
                $.getJSON('@Url.Action("ListarListaValor", "Alumno")'
                    + '/' + value,
                    function (data) {
                        $("#DireccionDistrito").empty();
                        $("#DireccionDistrito").append("<option value selected='true'>--Seleccionar--</option>");
                        $.each(data, function (i, item) {
                            if (item.IdListaValor == $("#IdDireccionDistrito").val()) {
                                $("#DireccionDistrito").append("<option selected value='"
                                     + item.IdListaValor + "'>" + item.Valor
                                     + "</option>");
                            } else {
                                $("#DireccionDistrito").append("<option value='"
                                   + item.IdListaValor + "'>" + item.Valor
                                   + "</option>");
                            }
                            $("#DireccionDistrito").attr('disabled', false);
                        });
                    });
            }
        }
    }


</script>

    

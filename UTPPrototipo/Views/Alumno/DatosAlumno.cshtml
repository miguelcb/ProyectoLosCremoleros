@using UTPPrototipo.Common
@model UTP.PortalEmpleabilidad.Modelo.Alumno
@{
    Layout = "~/Views/Alumno/_LayoutAlumno.cshtml";
    ViewBag.Title = "Datos Alumno";
}

<link href="~/Content/font-awesome.css" rel="stylesheet" />
@using (Html.BeginForm("DatosAlumno", "Alumno", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.IdAlumno)
    @Html.HiddenFor(x => x.Foto)
    @Html.HiddenFor(x => x.ArchivoMimeType)
    @Html.Hidden("IdDireccionCiudad", Model.DireccionCiudadId)
    @Html.Hidden("IdDireccionDistrito", Model.DireccionDistritoId)
    @Html.Hidden("DireccionRegion", Model.DireccionRegion)
    @Html.Hidden("DireccionCiudad", Model.DireccionCiudad)
    @Html.Hidden("DireccionDistrito", Model.DireccionDistrito)


    <div class="container" style="margin-top:2px;">
        <h5>Datos Personales</h5>
        <hr />

        <div class="row">
            <div class="col-sm-6">

                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">Fecha <br />Registro</span>
                            @*@Html.TextBoxFor(x => x.FechaCreacion, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })*@
                            @{
    DateTime fechaAMostrar = Convert.ToDateTime(Model.FechaCreacion);
                            }
                            <input type="text" value="@fechaAMostrar.ToString("dd/MM/yyyy")" class="form-control" disabled />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">Codigo</span>
                            @Html.TextBoxFor(x => x.CodAlumnoUTP, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">Usuario</span>
                            @Html.TextBoxFor(x => x.Usuario, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="input-group">
                            <span class="input-group-addon">Nombres</span>
                            @Html.TextBoxFor(x => x.Nombres, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="input-group">
                            <span class="input-group-addon">Apellidos</span>
                            @Html.TextBoxFor(x => x.Apellidos, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">Tipo<br />Documento</span>
                            @Html.DropDownListFor(m => m.TipoDocumentoIdListaValor, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">Número<br />Documento</span>
                            @Html.TextBoxFor(x => x.NumeroDocumento, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">Fecha de<br />Nacimiento</span>
                            @Html.TextBoxFor(x => x.FechaNacimiento, "{0:dd/MM/yyyy}", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="input-group">
                            <span class="input-group-addon">Sexo</span>
                            @Html.DropDownListFor(m => m.SexoIdListaValor, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="row">
                    <div class="col-sm-4">

                        @*@Html.Imagen(Model.Foto)
                            <img src="@Url.Action("ReturnImagen", "Alumno", new { imagen=Convert.ToBase64String(Model.Foto) })" style="height:180px;border-radius:5px 5px 5px 5px;" />*@
                        @if (Model.Foto != null && String.IsNullOrEmpty(Model.ArchivoMimeType) == false)
                        {
                            <img src="@Url.Action("GetImageAlumno", "Alumno", new {Model.IdAlumno})" style="height:180px;border-radius:5px 5px 5px 5px;" />
                        }
                        else
                        {

                        }



                    </div>
                    <div class="col-sm-8" style="text-align:left;">
                        <button type="button" class="btn btn-default color-paleta1" id="IdCambiarImagen">Cambiar Imagen</button>
                        <input id="fileUpload" type="file" name="foto2" />
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <div class="input-group">
                    <span class="input-group-addon">Dirección</span>
                    @Html.TextBoxFor(x => x.Direccion, htmlAttributes: new { @class = "form-control", })
                </div>
                @Html.ValidationMessageFor(m => m.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4">
                <div class="input-group">
                    <span class="input-group-addon">Departa-<br />mento</span>
                    @Html.DropDownListFor(m => m.DireccionRegionId, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.DireccionRegionId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-4">
                <div class="input-group">
                    <span class="input-group-addon">Provincia</span>
                    @*<select class="form-control" id="DireccionCiudadId" name="DireccionCiudadId" data-val="true" data-val_required="Falta la provincia" aria-required="true" aria-invalid="false" aria-describedby="DireccionCiudad-error"></select>*@
                    <!--Se envía el SelectList vacío porque se carga por javascript.-->
                    @Html.DropDownListFor(m => m.DireccionCiudadId, new SelectList(string.Empty, "Value", "Text"), "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.DireccionCiudadId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-4">
                <div class="input-group">
                    <span class="input-group-addon">Distrito</span>
                    <!--Se envía el SelectList vacío porque se carga por javascript.-->
                    @Html.DropDownListFor(m => m.DireccionDistritoId, new SelectList(string.Empty, "Value", "Text"), "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                    @*<select class="form-control" id="DireccionDistritoId" name="DireccionDistritoId" data-val="true" data-val_required="Falta el distrito"></select>*@
                </div>
                @Html.ValidationMessageFor(m => m.DireccionDistritoId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="input-group">
                    <span class="input-group-addon">e-Mail</span>
                    @Html.TextBoxFor(x => x.CorreoElectronico1, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="input-group">
                    <span class="input-group-addon">e-Mail<br />2</span>
                    @Html.TextBoxFor(x => x.CorreoElectronico2, htmlAttributes: new { @class = "form-control", })
                </div>
                @Html.ValidationMessageFor(m => m.CorreoElectronico2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3">
                <div class="input-group">
                    <span class="input-group-addon">(*) Tel.<br />Celular</span>
                    @Html.TextBoxFor(x => x.TelefonoCelular, htmlAttributes: new { @class = "form-control", })
                </div>
                @Html.ValidationMessageFor(m => m.TelefonoCelular, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-3">
                <div class="input-group">
                    <span class="input-group-addon">Teléfono<br />fijo</span>
                    @Html.TextBoxFor(x => x.TelefonoFijoCasa, htmlAttributes: new { @class = "form-control", })
                </div>
                @Html.ValidationMessageFor(m => m.TelefonoFijoCasa, "", new { @class = "text-danger" })
            </div>


        </div>
        <div class="row">
            <div class="col-sm-3">
                <div class="input-group">
                    <span class="input-group-addon">Estado</span>
                    @Html.DropDownListFor(m => m.EstadoAlumno, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12" style="text-align:right;">
                <button type="submit" class="btn btn-default color-paleta1" disabled id="IdRegistarDatosPersonales">Guardar</button>
            </div>
        </div>
        <hr />
    </div>

}
<script>
    $(document).ready(function () {
        $("#divFinalCabecera").removeClass("color-paleta2 color-paleta3 color-paleta4 color-paleta5 color-paleta6 color-paleta7 color-paleta8").addClass("color-paleta1");
        $('#PestañaIndex').css('backgroundColor', '#f00');
        $("#fileUpload").hide();
        InitialCombos($("#DireccionRegionId").val());
    });

    $(":enabled").focus(function () {
        $("#IdRegistarDatosPersonales").attr('disabled', false);
        return false;
    });
    $("#IdCambiarImagen").click(function () {
        $("#fileUpload").trigger("click");
    });
    
    //Cambio del combo de departamento:
    $("#DireccionRegionId").change(function () {
                
        //* Se carga el combo de departamentos:
        fillCombo("DireccionCiudadId", $("#DireccionRegionId").val());
        
        limpiarProvincia();
        limpiarDistrito();
        
    });

    //Cambio del combo de provincia:
    $("#DireccionCiudadId").change(function () {

        //Se carga el combo de distritos:
        fillCombo("DireccionDistritoId", $("#DireccionCiudadId").val());

        limpiarDistrito();
    });

    function limpiarDistrito() {
        //* Se limpia el combo del distrito:
        $("#DireccionDistritoId").empty();

        //* Se establece el valor de --Seleccione--
        $("#DireccionDistritoId").append("<option selected value>- Seleccionar -</option>");
    }

    function limpiarProvincia() {
        //* Se limpia el combo del distrito:
        $("#DireccionCiudadId").empty();

        //* Se establece el valor de --Seleccione--
        $("#DireccionCiudadId").append("<option selected value>- Seleccionar -</option>");
    }

    function fillCombo(updateId, value) {

        if (value != "" && value != null)
        {
            $.getJSON('@Url.Action("ListarListaValor", "Alumno")'
                + '/' + value,
                function (data) {

                    //Se limpia el combo:
                    $("#" + updateId).empty();

                    //Se ingresa la opción - Seleccionar -
                    $("#" + updateId).append("<option value selected>- Seleccionar -</option>");

                    //Se recorre la lista de resultados:
                    $.each(data, function (i, item) {

                        //Se van agregando las opciones del combo.
                        $("#" + updateId).append("<option value='"
                           + item.IdListaValor + "'>" + item.Valor
                           + "</option>");
                        //$("#" + updateId).attr('disabled', false);
                    });
                });
        } else {
            //$("#" + updateId).empty(); //Si está vacío se debe dejar con la palabra Seleccionar.
            //$("#" + updateId).trigger("change");
            //$("#" + updateId).attr('disabled', true);
        }
    }
    function InitialCombos(value) {
        var ListaValorPro = "";
        if (value != "" && value != null) {
            //Cargar combo de provincias
            $.getJSON('@Url.Action("ListarListaValor", "Alumno")'
                + '/' + value,
                function (data) {
                    $("#DireccionCiudadId").empty();
                    $("#DireccionCiudadId").append("<option value selected>- Seleccionar -</option>");
                    $.each(data, function (i, item) {
                        if (item.IdListaValor == $("#IdDireccionCiudad").val()) {
                            $("#DireccionCiudadId").append("<option selected value='"
                                 + item.IdListaValor + "'>" + item.Valor
                                 + "</option>");
                        } else {
                            $("#DireccionCiudadId").append("<option value='"
                               + item.IdListaValor + "'>" + item.Valor
                               + "</option>");
                        }
                        $("#DireccionCiudadId").attr('disabled', false);
                    });
                });
            value = $("#IdDireccionCiudad").val()
            if (value != "" && value != null) {
                //Cargar combo de distrito
                $.getJSON('@Url.Action("ListarListaValor", "Alumno")'
                    + '/' + value,
                    function (data) {
                        $("#DireccionDistritoId").empty();
                        $("#DireccionDistritoId").append("<option value selected>- Seleccionar -</option>");
                        $.each(data, function (i, item) {
                            if (item.IdListaValor == $("#IdDireccionDistrito").val()) {
                                $("#DireccionDistritoId").append("<option selected value='"
                                     + item.IdListaValor + "'>" + item.Valor
                                     + "</option>");
                            } else {
                                $("#DireccionDistritoId").append("<option value='"
                                   + item.IdListaValor + "'>" + item.Valor
                                   + "</option>");
                            }
                            $("#DireccionDistritoId").attr('disabled', false);
                        });
                    });
            }
        }
    }


</script>


@model UTP.PortalEmpleabilidad.Modelo.AlumnoInformacionAdicional
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true" id="idCloseConocimiento">&times;</span><span class="sr-only">Close</span></button>
            <h4 class="modal-title" id="Estudio">Información adicional</h4>
        </div>
        <div class="modal-body">
            @Html.HiddenFor(m => m.IdAlumno)
            @Html.HiddenFor(m => m.IdCV)
            @Html.HiddenFor(m => m.Movimiento)
            @Html.HiddenFor(m => m.IdInformacionAdicional)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group fuente-pequeña">
                        <span class="input-group-addon">(*)Tipo</span>
                        @Html.DropDownListFor(m => m.TipoConocimientoIdListaValor, null, "- Seleccionar Tipo de Conocimiento -", htmlAttributes: new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(m => m.TipoConocimientoIdListaValor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="input-group fuente-pequeña">
                        <span class="input-group-addon">(*)Nombre</span>
                        @Html.TextBoxFor(m => m.Conocimiento, htmlAttributes: new { @class = "form-control", @placeholder = "Nombre del Conocimiento", @Id = "Conocimientos" })
                    </div>
                    @Html.ValidationMessageFor(m => m.Conocimiento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group fuente-pequeña">
                        <span class="input-group-addon">(*)Nivel</span>
                        @Html.DropDownListFor(m => m.NivelConocimientoIdListaValor, null, "- Seleccionar Nivel de Conocimiento -", htmlAttributes: new { @class = "form-control" })


                    </div>
                    @Html.ValidationMessageFor(m => m.NivelConocimientoIdListaValor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class="input-group fuente-pequeña">
                        <span class="input-group-addon">Año Inicio</span>
                        @if (Model.FechaConocimientoDesdeAno == 0) { Model.FechaConocimientoDesdeAno = null; }
                        @Html.TextBoxFor(m => m.FechaConocimientoDesdeAno, htmlAttributes: new { @class = "form-control", @placeholder = "Año Inicio" })
                    </div>
                    @Html.ValidationMessageFor(m => m.FechaConocimientoDesdeAno, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-6">
                    <div class="input-group fuente-pequeña">
                        <span class="input-group-addon">Mes Inicio</span>
                        @Html.DropDownListFor(m => m.FechaConocimientoDesdeMes, new SelectList(ViewBag.meses, "Key", "Value"), "- Seleccionar Mes de Inicio -", htmlAttributes: new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(m => m.FechaConocimientoDesdeMes, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class="input-group fuente-pequeña">
                        <span class="input-group-addon">Año Fin</span>
                        @if (Model.FechaConocimientoHastaAno == 0) { Model.FechaConocimientoHastaAno = null; }
                        @Html.TextBoxFor(m => m.FechaConocimientoHastaAno, htmlAttributes: new { @class = "form-control", @placeholder = "Año Fin" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="input-group fuente-pequeña">
                        <span class="input-group-addon">Mes Fin</span>
                        @Html.DropDownListFor(m => m.FechaConocimientoHastaMes, new SelectList(ViewBag.meses, "Key", "Value"), "- Seleccionar Mes de Fin -", htmlAttributes: new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(m => m.FechaConocimientoHastaMes, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group fuente-pequeña">
                        <span class="input-group-addon">País</span>
                        @Html.DropDownListFor(m => m.PaisIdListaValor, null, "- Seleccionar País -", htmlAttributes: new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(m => m.PaisIdListaValor, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-6" id="divCiudadTexto">
                    <div class="input-group fuente-pequeña">
                        <span class="input-group-addon">Ciudad</span>
                        @Html.TextBoxFor(model => model.Ciudad, new { @class = "form-control", @placeholder = "Ciudad donde lo obtuvo" })
                    </div>
                    @Html.ValidationMessageFor(m => m.Ciudad, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-6" id="divCiudadCombo" style="display:none;">
                    <div class=" input-group fuente-pequeña">
                        <span class="input-group-addon">Ciudad</span>                        
                        @Html.DropDownListFor(m => m.Ciudad, null, "-Seleccione-", htmlAttributes: new { @class = "form-control" ,@id="CiudadCombo"})
                    </div>
                    @Html.ValidationMessageFor(m => m.Ciudad, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-8">
                    <div class="input-group fuente-pequeña">
                        <span class="input-group-addon">Institución</span>
                        @Html.TextBoxFor(m => m.InstituciónDeEstudio, htmlAttributes: new { @class = "form-control", @placeholder = "Institución donde lo obtuvo" })
                    </div>
                    @Html.ValidationMessageFor(m => m.InstituciónDeEstudio, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-4">
                    <div class="input-group fuente-pequeña">
                        <span class="input-group-addon">Experiencia</span>
                        @if (Model.AnosExperiencia == 0) { Model.AnosExperiencia = null; }
                        @Html.TextBoxFor(m => m.AnosExperiencia, htmlAttributes: new { @class = "form-control", @placeholder = "Años de conocimiento" })
                    </div>
                    @Html.ValidationMessageFor(m => m.AnosExperiencia, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12 text-right"><button type="submit" class="btn btn-default color-paleta4 fuente-pequeña" style="color: white; margin-bottom: 10px;" id="IdRegistrarInformacionAdicional">Guardar</button></div>
            </div>
        </div>
        <div class="modal-footer">
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {
        //$("#divFinalCabecera").removeClass("color-paleta1 color-paleta2 color-paleta4 color-paleta5").addClass("color-paleta3");

        var idPais = $("#PaisIdListaValor").val();
        if (idPais == "PAIPER") {
            $("#divCiudadCombo").css('display', 'block');       //los combos se muestran
            $("#divCiudadTexto").css('display', 'none');
        }
        //se obtiene el valor del combo
        var codigoTipoConocimiento = $('#TipoConocimientoIdListaValor').val();

        //ESE ES LA CAJA, LA ACCION Y EL CONTROLADOR
        AutoCompleteTextDemo('#Conocimientos', '@Url.Action("ListarDatosEspecificos", "OfertaInformacionAdicional")' + '?codigoTipo=' + codigoTipoConocimiento, '#Conocimientos', '#TipoConocimientoIdListaValor', 'option', 'appendTo', '.eventInsForm');

        $('#CiudadCombo').on('change', function () {
            var Ciudad = $("#CiudadCombo").val();
            //Se guarda el valor en el hidden TextoDepartamento.
            $('#Ciudad').val(Ciudad);
        });

        window.onbeforeunload = function (e) {
            return 'Dialog text here.';
        };

        $('#PaisIdListaValor').on('change', function () {
            var idPais = $("#PaisIdListaValor").val()

            if (idPais == "PAIPER") {
                $("#divCiudadCombo").css('display', 'block');       //los combos se muestran
                $("#divCiudadTexto").css('display', 'none'); //las cajas se ocultan
            }
            else {
                $("#divCiudadCombo").css('display', 'none');        //los combos se ocultan
                $("#divCiudadTexto").css('display', 'block'); //las cajas se muestran
            }

        });
    });


</script>
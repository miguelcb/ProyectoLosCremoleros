@model UTP.PortalEmpleabilidad.Modelo.AlumnoExperiencia

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true" id="idCloseExperiencia">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title" id="ExperienciaLaboral">Experiencia Laboral</h4>
    </div>
    <div class="modal-body">
        @Html.HiddenFor(m => m.IdAlumno)
        @Html.HiddenFor(m => m.IdCV)
        @Html.HiddenFor(m => m.Movimiento)
        @Html.HiddenFor(m => m.IdExperienciaCargo)
        @Html.HiddenFor(m => m.IdEmpresa)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Empresa</span>
                    @Html.TextBoxFor(m => m.Empresa, htmlAttributes: new { @class = "form-control", @placeholder = "Nombre de la Empresa", @id = "NombreComercial" }) 
                </div>
                @Html.ValidationMessageFor(m => m.Empresa, "", new { @class = "text-danger" })
            </div>   
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Descrip-<br />ción de<br />Empresa</span>
                    @Html.TextAreaFor(m => m.DescripcionEmpresa, htmlAttributes: new { @class = "form-control", @placeholder = "Descripción de la Empresa", @rows = "3", @maxlength = "200" })
                </div>
                @Html.ValidationMessageFor(m => m.DescripcionEmpresa, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Sector<br />Principal</span>
                    @Html.DropDownListFor(m => m.SectorEmpresarial, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.SectorEmpresarial, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-3">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon" style="width:0px;">2</span>
                    @Html.DropDownListFor(m => m.SectorEmpresarial2, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="col-sm-3">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon" style="width:0px;">3</span>
                    @Html.DropDownListFor(m => m.SectorEmpresarial3, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*) País</span>
                    @Html.DropDownListFor(m => m.Pais, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.Pais, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6" id="divCiudadTexto">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Ciudad</span>
                    @Html.TextBoxFor(model => model.Ciudad, new { @class = "form-control", @placeholder = "Ciudad donde trabajó"})
                </div>
                @Html.ValidationMessageFor(m => m.Ciudad, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6" id="divCiudadCombo" style="display:none;" >
                <div class=" input-group fuente-pequeña">
                <span class="input-group-addon">Ciudad</span>
                   @Html.DropDownListFor(m => m.Ciudad, null, "-Seleccione-", htmlAttributes: new { @class = "form-control", @id = "CiudadCombo" })
                @*@Html.DropDownList(m => m.Ciudad, htmlAttributes: new { @class = "form-control", @placeholder = "Ciudad donde trabajó" })*@
            </div>
                @Html.ValidationMessageFor(m => m.Ciudad, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Tipo</span>
                    @Html.DropDownListFor(m => m.TipoCargo, null, "- Seleccionar -", htmlAttributes: new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.TipoCargo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Cargo</span>
                    @Html.TextBoxFor(m => m.NombreCargo, htmlAttributes: new { @class = "form-control", @placeholder = "Nombre del Cargo" })
                </div>
                @Html.ValidationMessageFor(m => m.NombreCargo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Año<br />Inicio</span>
                    @if (Model.FechaInicioCargoAno == 0) { Model.FechaInicioCargoAno = null; }
                    @Html.TextBoxFor(m => m.FechaInicioCargoAno, htmlAttributes: new { @class = "form-control", @placeholder = "Año Inicio", @value = "" })
                </div>
                @Html.ValidationMessageFor(m => m.FechaInicioCargoAno, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">(*)Mes<br />Inicio</span>
                    @Html.DropDownListFor(m => m.FechaInicioCargoMes, new SelectList(ViewBag.meses, "Key", "Value"), "Mes de Inicio de cargo", htmlAttributes: new { @class = "form-control" })

                </div>
                @Html.ValidationMessageFor(m => m.FechaInicioCargoMes, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Año Fin</span>
                    @if (Model.FechaFinCargoAno == 0) { Model.FechaFinCargoAno = null; }
                    @Html.TextBoxFor(m => m.FechaFinCargoAno, htmlAttributes: new { @class = "form-control", @placeholder = "Año Fin", @id = "FechaFinCargoAno" })
                </div>
                @Html.ValidationMessageFor(m => m.FechaFinCargoAno, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Mes Fin</span>
                    @Html.DropDownListFor(m => m.FechaFinCargoMes, new SelectList(ViewBag.meses, "Key", "Value"), "Mes de Inicio de cargo", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>                    
        </div>
        <div class="row">
            <div class="col-sm-4">
                <div class="input-group fuente-pequeña">                    
                    <input type="checkbox" id="ActualmenteTrabajando">
                    <span> Actualmente Trabajando</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="input-group fuente-pequeña">
                    <span class="input-group-addon">Descrip-<br />ción de<br />Cargo</span>
                    @Html.TextAreaFor(m => m.DescripcionCargo, htmlAttributes: new { @class = "form-control", @placeholder = "Descripción de funciones", @rows = "8" })
                </div>
                @Html.ValidationMessageFor(m => m.DescripcionCargo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 text-right"><button type="submit" class="btn btn-default color-paleta4 fuente-pequeña" style="color: white; margin-bottom: 10px;" id="IdRegistrarExperiencia">Guardar</button></div>
        </div>
    </div>
    <div class="modal-footer">
    </div>
</div>

<script>

    $(document).ready(function () {
        $("#divFinalCabecera").removeClass("color-paleta1 color-paleta3 color-paleta4 color-paleta5 color-paleta6 color-paleta7 color-paleta8").addClass("color-paleta2");
        $('#PestañaOfertas').css('backgroundColor', '#f00');
        AutoCompleteTextBuscarDescripcion('#NombreComercial', '@Url.Action("ListarNombreEmpresa", "UTP")', '#NombreComercial');
        
        var fechaFin = $('#FechaFinCargoAno').val(),
             empresa = $('#NombreComercial').val();
        if (fechaFin == '' && empresa != '') {
            $('#ActualmenteTrabajando').attr("checked", "true");
            $('#FechaFinCargoAno').attr("disabled", "disabled");
            $('#FechaFinCargoMes').attr("disabled", "disabled");
        }

        var idPais = $("#Pais").val();
        if (idPais == "PAIPER") {
            $("#divCiudadCombo").css('display', 'block');       //los combos se muestran
            $("#divCiudadTexto").css('display', 'none');
        }
        var $ATrabajando = $('#ActualmenteTrabajando');
        
        $ATrabajando.change(function () {
            if (this.checked) {
                $('#FechaFinCargoAno').attr("disabled", "disabled");
                $('#FechaFinCargoMes').attr("disabled", "disabled");
            } 
            if (!this.checked) {
                $('#FechaFinCargoAno').removeAttr("disabled");
                $('#FechaFinCargoMes').removeAttr("disabled");
            }
        });
        $('#CiudadCombo').on('change', function () {
            var Ciudad = $("#CiudadCombo").val();
            //Se guarda el valor en el hidden TextoDepartamento.
            $('#Ciudad').val(Ciudad);
        });
        $('#Pais').on('change', function () {
            var idPais = $("#Pais").val()
            //alert(idPais);
            console.log(idPais);

            if (idPais == "PAIPER") {
                $("#divCiudadCombo").css('display', 'block');       //los combos se muestran
                $("#divCiudadTexto").css('display', 'none'); //las cajas se ocultan
            }
            else {
                $("#divCiudadCombo").css('display', 'none');        //los combos se ocultan
                $("#divCiudadTexto").css('display', 'block'); //las cajas se muestran
            }

        });
    });


    function cargarDescripcion(idEmpresa)
    {
        var url = '@Url.Action("BuscarDatosEmpresas","Alumno")' + '?idEmpresa=' + idEmpresa;

        $.get(url, function (empresa) {

            console.log(DescripcionEmpresa);
            $('#DescripcionEmpresa').val(empresa["DescripcionEmpresa"]);
            $('#SectorEmpresarial').val(empresa["SectorEmpresarial"]);
            $('#SectorEmpresarial2').val(empresa["SectorEmpresarial2"]);
            $('#SectorEmpresarial3').val(empresa["SectorEmpresarial3"]);
            $('#Pais').val(empresa["Pais"]);
            if (empresa["Pais"] == "PAIPER") {
                $("#divCiudadCombo").css('display', 'block');       //los combos se muestran
                $("#divCiudadTexto").css('display', 'none'); //las cajas se ocultan
            }
            $('#IdEmpresa').val(idEmpresa);
        });

    }


    //$('#NombreComercial').focusout(function () {
    //    alert('Hola Junior');
    //});
    </script>
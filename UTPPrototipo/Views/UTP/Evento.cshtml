@model UTP.PortalEmpleabilidad.Modelo.Evento 
@{
    Layout = "~/Views/UTP/_LayoutUTP.cshtml";
    ViewBag.Title = "Evento";
}

@*<link href="~/Content/font-awesome.css" rel="stylesheet" />*@
<div class="container fuente-pequeña" style="margin-top:2px;">
    <div class="panel-group" id="datos-cuenta" role="tablist" aria-multiselectable="true">
        @{Html.RenderAction("VistaCabeceraUtp", "UTP");}
    </div>

    <h5>Evento</h5>
   @* <h5>Evento: Feria de Empleos</h5>*@
    <br />
    @*<script src="~/Scripts/jquery-ui-1.11.2.js"></script>
    <script src="~/Scripts/jquery.maskedinput.js"></script>
    <script src="~/Scripts/calendario.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>*@
    <script src="~/Scripts/moment.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />
@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => Model.TextoDepartamento)
    @Html.HiddenFor(model => Model.TextoCiudad)
    @Html.HiddenFor(model => Model.TextDistrito)

    <span style="font-size:9px;">* Campos obligatorios</span>
    <div class="row">
        <div class="col-sm-6" style="border-right:solid;border-color:rgb(220, 220, 220);border-width:1px;">
            <div class="row">
                <div class="col-sm-12">
                    <div class="input-group">

                        <span class="input-group-addon">(*)Nombre<br />Evento</span>
                       
                      
                        @Html.TextBoxFor(model => model.NombreEvento, new { @class = "form-control", rows = "3", @placeholder = "Nombre del Evento" })
                        
                    </div>@Html.ValidationMessageFor(model => model.NombreEvento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
 
                <div class="col-sm-6">
                    <div class="input-group">

                        <span class="input-group-addon">(*)Estado</span>
                        @Html.DropDownList("EstadoEvento", ViewData["ListaEstadoEvento"] as List<SelectListItem>, "- Seleccione Estado -", new { @class = "form-control" })
                    
                    </div>@Html.ValidationMessageFor(model => model.EstadoEvento, "", new { @class = "text-danger" })
                </div>
            </div>
                
            <div class="row">

                <div class="col-sm-6">
                    <div class="input-group">

                        <span class="input-group-addon">(*)Tipo</span>

                        @Html.DropDownList("TipoEvento", ViewData["ListaTipoEvento"] as List<SelectListItem>, "- Seleccione Tipo Evento -", new { @class = "form-control" })
                   
                     </div>@Html.ValidationMessageFor(model => model.TipoEvento, "", new { @class = "text-danger" })
                </div>
            </div>

         
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">Empresa<br />auspiciad.</span>
                        @Html.DropDownList("IdEmpresa", ViewData["ListaEmpresa"] as List<SelectListItem>, "- Seleccione Empresa -", new { @class = "form-control" })
                       
                    </div>@Html.ValidationMessageFor(model => model.IdEmpresa, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="input-group">
                        <span class="input-group-addon">Descrip-<br />ción</span>
                        @*<textarea rows="6" class="form-control" placeholder="Empresa auspiciadora"></textarea>*@

                        @Html.TextAreaFor(model => model.DescripcionEvento, new { @class = "form-control", rows = "3", @placeholder = "Empresa auspiciadora" })
                        
                    </div>@Html.ValidationMessageFor(model => model.DescripcionEvento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">(*)Fecha <br />Inicio</span>
                        @*<input type="text" class="form-control" placeholder="Fecha de Inicio (dd/mm/aaaa)">*@

                       @Html.TextBoxFor(model => model.FechaEvento, new { @class = "form-control", @placeholder = "Fecha de Inicio (dd/mm/aaaa)", @Value = System.DateTime.Now.ToString("d") })                        
                    </div>@Html.ValidationMessageFor(model => model.FechaEvento, "", new { @class = "text-danger" }) 
                 
                </div>
                
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">(*)Fecha <br />Fin</span>
                        @*<input type="text" class="form-control" placeholder="Fecha de Inicio (dd/mm/aaaa)">*@

                        @Html.TextBoxFor(model => model.FechaEventoFin, new { @class = "form-control", @placeholder = "Fecha de Fin (dd/mm/aaaa)", @Value = System.DateTime.Now.ToString("d") })
                    </div>@Html.ValidationMessageFor(model => model.FechaEventoFin, "", new { @class = "text-danger" })

                </div>

            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="input-group">
                        <span class="input-group-addon">Dias de<br />Evento</span>
                        <table class="table table-bordered" style="margin-bottom: 0;">
                            <thead>
                                <tr>
                                    <td style="text-align: center;">Lu</td>
                                    <td style="text-align: center;">Ma</td>
                                    <td style="text-align: center;">Mi</td>
                                    <td style="text-align: center;">Ju</td>
                                    <td style="text-align: center;">Vi</td>
                                    <td style="text-align: center;">Sa</td>
                                    <td style="text-align: center;">Do</td>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <td style="text-align: center; padding: 4px;"><input type="checkbox" name="weeks[lunes]" value="1" /></td>
                                    <td style="text-align: center; padding: 4px;"><input type="checkbox" name="weeks[martes]" value="2" /></td>
                                    <td style="text-align: center; padding: 4px;"><input type="checkbox" name="weeks[miercoles]" value="3" /></td>
                                    <td style="text-align: center; padding: 4px;"><input type="checkbox" name="weeks[jueves]" value="4" /></td>
                                    <td style="text-align: center; padding: 4px;"><input type="checkbox" name="weeks[viernes]" value="5" /></td>
                                    <td style="text-align: center; padding: 4px;"><input type="checkbox" name="weeks[sabado]" value="6" /></td>
                                    <td style="text-align: center; padding: 4px;"><input type="checkbox" name="weeks[domingo]" value="7" /></td>
                                </tr>
                            </tfoot>
                        </table>
                        @Html.HiddenFor(model => Model.DiasEvento)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="input-group">

                        @*<span class="input-group-addon">(*)Describa<br />Fecha</span>*@
                        <span class="input-group-addon">(*)Fecha y<br />Hora</span>
                        @*<input type="text" class="form-control" placeholder="Fecha del Evento. Ej: Lunes 27 de Enero del 2014, de 8 a 9 de la Noche">*@
                        @*@Html.TextBoxFor(model => model.FechaEventoTexto, new { @class = "form-control", rows = "3", @placeholder = "Fecha del Evento. Ej: Lunes 27 de Enero del 2014, de 8 a 9 de la Noche" })*@
                        @Html.TextBoxFor(model => model.FechaEventoTexto, new { @class = "form-control", rows = "3", @placeholder = "Fecha y Hora del Evento." })
                        
                    </div>@Html.ValidationMessageFor(model => model.FechaEventoTexto, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="input-group">

                        <span class="input-group-addon">(*)Lugar</span>
                       @* <input type="text" class="form-control" placeholder="Describa el Lugar del Evento. Ej: Centro de Convenciones CLARO">*@
                        @Html.TextBoxFor(model => model.LugarEvento, new { @class = "form-control", rows = "3", @placeholder = "Describa el Lugar del Evento. Ej: Centro de Convenciones CLARO" })
                        
                    </div>@Html.ValidationMessageFor(model => model.LugarEvento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">* Departa-<br />mento</span>
                        @*<input type="text" class="form-control" placeholder="Departamento del Evento">*@
                       @* @Html.TextBoxFor(model => model.DireccionRegion, new { @class = "form-control", rows = "3", @placeholder = "Departamento del Evento" })*@
                        @*@Html.DropDownList("DireccionRegion", ViewData["Departamento"] as List<SelectListItem>, "-Seleccione-", new { @class = "form-control", @id = "DireccionDepartamentoLocacion" })*@                        
                        @Html.DropDownListFor(m => m.DireccionRegion, null, "Seleccione", htmlAttributes: new { @class = "form-control", @id = "DireccionDepartamentoLocacion" })
                    </div>@Html.ValidationMessageFor(model => model.DireccionRegion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">* Ciudad</span>
                        @*<input type="text" class="form-control" placeholder="Ciudad del Evento">*@
                        @*@Html.TextBoxFor(model => model.DireccionCiudad, new { @class = "form-control", rows = "3", @placeholder = "Ciudad del Evento" })*@
                        @*@Html.DropDownList("DireccionCiudad", new SelectList(string.Empty, "Value", "Text"), "-Seleccione-", new { @class = "form-control", @id = "DireccionCiudadLocacion" })*@
                        @Html.DropDownListFor(m => m.DireccionCiudad, null, "Seleccione", htmlAttributes: new { @class = "form-control", @id = "DireccionCiudadLocacion" })
                    </div>@Html.ValidationMessageFor(model => model.DireccionCiudad, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">Distrito</span>
                        @*<input type="text" class="form-control" placeholder="Distrito del Evento">*@
                        @Html.DropDownList("DireccionDistrito", new SelectList(string.Empty, "Value", "Text"), "-Seleccione-", new { @class = "form-control", @id = "DireccionDistritoLocacion" })
                        @*@Html.TextBoxFor(model => model.DireccionDistrito, new { @class = "form-control", rows = "3", @placeholder = "Distrito del Evento" })*@
                        
                    </div>@Html.ValidationMessageFor(model => model.DireccionDistrito, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="input-group">
                        <span class="input-group-addon">Dirección</span>
                        @*<input type="text" class="form-control" placeholder="Dirección del Evento. Ej: Calle Amapolas 991">*@
                        @Html.TextBoxFor(model => model.DireccionEvento, new { @class = "form-control", rows = "3", @placeholder = "Dirección del Evento. Ej: Calle Amapolas 991" })
                        
                    </div>@Html.ValidationMessageFor(model => model.DireccionEvento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class="input-group">
                        <span class="input-group-addon">Asistentes<br />esperados</span>
                        @*<input type="text" class="form-control" placeholder="Número">*@
                        @Html.TextBoxFor(model => model.AsistentesEsperados, new { @class = "form-control", rows = "3", @placeholder = "Número" })
                      
                        <span class="help-inner">@Html.ValidationMessageFor(model => model.AsistentesEsperados)</span> 
                    </div>
                </div>
            </div>



            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">@Html.EditorFor(model => model.RegistraAlumnos)</span>
                        <span class="form-control">Pueden asistir Alumnos</span>
                        
                    </div>@Html.ValidationMessageFor(model => model.RegistraAlumnos, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">@Html.EditorFor(model => model.RegistraUsuariosEmpresa)</span>
                        <span class="form-control">Pueden asistir Usuarios empresa</span>
                        
                    </div>@Html.ValidationMessageFor(model => model.RegistraUsuariosEmpresa, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="input-group">
                        <span class="input-group-addon">@Html.EditorFor(model => model.RegistraPublicoEnGeneral)</span>
                        <span class="form-control">Puede asistir el público en general</span>
                        
                    </div>@Html.ValidationMessageFor(model => model.RegistraPublicoEnGeneral, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                @*<div class="col-sm-12" style="text-align:right;">
                    <button class="btn btn-default color-paleta5">Guardar</button>
                </div>*@
                <div class="col-sm-12" style="text-align:right;">
                    <button class="btn btn-default color-paleta5" type="submit"  value=" guardar" >Guardar</button>
                    
                    
                    @*<button class="btn btn-default color-paleta5" type="submit" onclick="mostrarMensaje();">Guardar</button>*@
                   
                </div>
            </div>


            <hr />
           
            <br />
        </div>

      
    </div>
    
}
</div>

<script>

    $(document).ready(function () {
       
        //Se coloca el estilo del tab.
        $("#divFinalCabecera").removeClass("color-paleta1 color-paleta2 color-paleta3 color-paleta4 color-paleta6 color-paleta7 color-paleta8").addClass("color-paleta5");
        $('#PestañaEventos').css('backgroundColor', '#f00');
        //Se coloca el datepicker a la caja de fecha.
        //checkSupportForInputTypeDate();
        var $eventStartDate = $("#FechaEvento"),
            $eventEndDate = $("#FechaEventoFin");

        $eventStartDate.datetimepicker({ format: "DD/MM/YYYY HH:mm" });
        $eventEndDate.datetimepicker({ format: "DD/MM/YYYY HH:mm" });

        $eventStartDate.on('dp.change', function (e) {
            $eventEndDate.data("DateTimePicker").minDate(e.date);
        });

        $eventEndDate.on('dp.change', function (e) {
            $eventStartDate.data("DateTimePicker").maxDate(e.date);
        });

        var $weeks = $('[name^=week]'),
            $weeksHidden = $('#DiasEvento');

        $weeks.change(function () {
            var $weeksChecked = $('[name^=week]:checked'),
                weeksChecked = $weeksChecked
                    .map(function () { return $(this).val(); })
                    .get()
                    .join(',');

            $weeksHidden.val(weeksChecked);

        });
    });

    

    function Exito() {

        alert('Grabado Correctamente');

    }
</script>

<script type="text/javascript">
    $(document).ready(function () {

        //Cambio en el combo departamento para cargar ciudades:
        $("#DireccionDepartamentoLocacion").change(function () {

            //Se limpia ciudad y distrito.
            $("#DireccionCiudadLocacion").empty();
            $("#DireccionDistritoLocacion").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetStateProvincia","Home")', // we are calling json method
                dataType: 'json',
                data: { IDListaValorPadre: $("#DireccionDepartamentoLocacion").val() }, //Se pasa el valor del departamento.

                success: function (states) {

                    $("#DireccionCiudadLocacion").append('<option selected value>Seleccione</option>'); //Se establece la opción "Seleccione" sin valor.
                    //Se recorre la lista de resultados para llenar el combo de ciudad.
                    $.each(states, function (i, state) {
                        $("#DireccionCiudadLocacion").append('<option value="' + state.Value + '">' +
                         state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Ha habido un error al obtener las ciudades.' + ex);
                }
            });
            return false;
        });

        //Cambio en el combo ciudad para cargar distritos.
        $("#DireccionCiudadLocacion").change(function () {

            //Se limpian los distrito.
            $("#DireccionDistritoLocacion").empty();

            //Llamada al servidor mediante ajax.
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetStateProvincia", "Home")',
                dataType: 'json',
                data: { IDListaValorPadre: $("#DireccionCiudadLocacion").val() }, //Se pasa el value de la ciudad como parámetro.
                success: function (states) {
                    $("#DireccionDistritoLocacion").append('<option selected value>Seleccione</option>');
                    $.each(states, function (i, state) {
                        $("#DireccionDistritoLocacion").append('<option value="' + state.Value + '">' +
                         state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Ha habido un error al obtener las ciudades.' + ex);
                }
            });
            return false;
        })
    });
</script>

<script>
    //Este bloque sólo debe ir una vez, esto quiere decir que todo lo de adentro se ejecuta cuando toda la pagina se renderiza o muestra al c liente.
    $(document).ready(function () {

        //Combo de departamento.
        $('#DireccionDepartamentoLocacion').on('change', function () {

            //Se obtiene el texto del combo.
            var TextDepartamento = $("#DireccionDepartamentoLocacion option:selected").text();

            //Se guarda el valor en el hidden TextoDepartamento.
            $('#TextoDepartamento').val(TextDepartamento);
        });



        //Combo de provincia.
        $('#DireccionCiudadLocacion').on('change', function () {

            //Se obtiene el texto del combo.
            var TextCiudad = $("#DireccionCiudadLocacion option:selected").text();

            //Se guarda el valor en el hidden TextoDepartamento.
            $('#TextoCiudad').val(TextCiudad);
        });

        //combo de distrito.
        $('#DireccionDistritoLocacion').on('change', function () {

            //Se obtiene el texto del combo.
            var TextDistrito = $("#DireccionDistritoLocacion option:selected").text();

            //Se guarda el valor en el hidden TextoDepartamento.
            $('#TextDistrito').val(TextDistrito);
        });

    });

</script>